{"version":3,"sources":["calendar-demo.module.js","calendar-demo.constants.js","calendar-demo.ctrl.js","calendar/calendar.directive.js"],"names":[],"mappings":"CAIA,WACA,QACA,OAAA,yBCDA,WACA,QACA,OAAA,mBACA,SAAA,gBAAA,kBCJA,WAMA,QAAA,GAAA,GAEA,GAAA,GAAA,KACA,EAAA,GAAA,MACA,EAAA,EAAA,cACA,EAAA,EAAA,WACA,KACA,EAAA,EAAA,GACA,EAAA,EAAA,EAGA,GAAA,MACA,KAAA,EACA,MAAA,GAIA,EAAA,aAAA,GAAA,MAAA,EAAA,KAAA,KAAA,EAAA,KAAA,MAAA,GAGA,EAAA,iBAAA,WACA,MAAA,GAAA,MACA,SAAA,EAAA,GACA,IAAA,IACA,EAAA,aAAA,GAAA,MAAA,EAAA,KAAA,KAAA,EAAA,KAAA,MAAA,MAKA,EAAA,OAAA,wFAEA,MAAA,IAGA,KAAA,GAAA,GAAA,EAAA,GAAA,EAAA,IACA,EAAA,KAAA,EAKA,OAFA,GAAA,MAAA,EAEA,EA7CA,QACA,OAAA,mBACA,WAAA,eAAA,2BCAA,WAMA,QAAA,GAAA,GAeA,QAAA,GAAA,GAGA,EAAA,MAAA,EAAA,gBAAA,EAAA,cAEA,EAAA,aAAA,EAAA,aAAA,WAEA,EAAA,OAAA,WACA,MAAA,GAAA,cACA,SAAA,EAAA,GACA,IAAA,IACA,EAAA,MAAA,EAAA,gBAAA,GACA,EAAA,aAAA,EAAA,cAxBA,GAAA,IACA,KAAA,EACA,YAAA,kCACA,SAAA,IACA,OACA,aAAA,SAIA,OAAA,GAjBA,QACA,OAAA,mBACA,UAAA,WAAA","file":"calendar-demo.min.js","sourcesContent":["/**\n * Calendar directive demonstration\n */\n\n(function() {\n  angular\n    .module('calendarDemoApp', []);\n})();\n","/**\n * Calendar directive constants\n */\n\n/* global CalendarRange:false */\n(function() {\n  angular\n    .module('calendarDemoApp')\n    .constant('CalendarRange', CalendarRange);\n})();","/**\n * Calendar directive demo controller\n */\n\n(function() {\n  angular\n    .module('calendarDemoApp')\n    .controller('calendarDemo', calendarDemo);\n\n  /* @ngInject */\n  function calendarDemo ($scope) {\n    /* jshint validthis: true */\n    var vm = this,\n      today = new Date(),\n      year = today.getFullYear(),\n      month = today.getMonth(),\n      years = [],\n      past = year - 20,\n      future = year + 20;\n\n    // Create initial date object\n    vm.date = {\n      year: year,\n      month: month\n    };\n\n    // Set initial value\n    vm.calendarDate = new Date(vm.date.year, vm.date.month, 1);\n\n    // When something changes in the date object change the calendarDate that we pass to the directive\n    $scope.$watchCollection(function () {\n      return vm.date;\n    }, function(newDate, oldDate) {\n      if ( newDate !== oldDate ) {\n        vm.calendarDate = new Date(vm.date.year, vm.date.month, 1);\n      }\n    });\n\n    // Array of months\n    vm.months = ('january,february,march,april,' +\n    'may,june,july,august,' +\n    'september,october,november,december').split(',');\n\n    // Build array of years (20 years in the past and 20 years in the future)\n    for(var i=past;i<=future;i++) {\n      years.push(i);\n    }\n\n    vm.years = years;\n\n    return vm;\n  }\n})();","/**\n * @desc calendar directive that renders a calendar\n * @file calendar.directive.js\n * @example <calendar date=\"myDate\"></calendar>\n */\n\n/* global CalendarRange:false */\n(function () {\n  angular\n    .module('calendarDemoApp')\n    .directive('calendar', calendar);\n\n  /* @ngInject */\n  function calendar (CalendarRange) {\n\n    // Setup directive object and scope\n    var directive = {\n      link: link,\n      templateUrl: 'calendar/calendar.template.html',\n      restrict: 'E',\n      scope: {\n        calendarDate: '=date'\n      }\n    };\n\n    return directive;\n\n    /* @ngInject */\n    function link (scope, element, attrs) {\n\n      // Set initial range\n      scope.range = CalendarRange.getMonthlyRange(scope.calendarDate);\n      // Set currentMonth so we can check if days are from the previous or next month\n      scope.currentMonth = scope.calendarDate.getMonth();\n      // Watch for changes and update scope variables\n      scope.$watch(function () {\n        return scope.calendarDate;\n      }, function(newDate, oldDate) {\n        if ( newDate !== oldDate ) {\n          scope.range = CalendarRange.getMonthlyRange(newDate);\n          scope.currentMonth = newDate.getMonth();\n        }\n      });\n\n    }\n  }\n\n})();"],"sourceRoot":"/source/"}